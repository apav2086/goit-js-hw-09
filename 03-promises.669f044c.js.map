{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAmBA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAe,CAAEL,WAAUC,SAEjC,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC1BN,EACFK,EAAQF,GAERG,EAAOH,E,IA1BGI,SAASC,cAAc,QAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,IAAMZ,EAAQa,SAASF,EAAMG,OAAOd,MAAMe,OACpCC,EAAOH,SAASF,EAAMG,OAAOE,KAAKD,OAClCE,EAASJ,SAASF,EAAMG,OAAOG,OAAOF,QAuB9C,SAAuBG,GACrB,I,IADuBC,EAAFD,EAAElB,MAAOgB,EAATE,EAASF,KAAMC,EAAfC,EAAeD,OAC3BG,EAAW,EAAGA,GAAYH,EAAQG,GAAY,EACrDtB,EAAcsB,EAAUD,GACrBE,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,YAAW,WACTC,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,GACrEA,E,IAEJ4B,OAAM,SAAAN,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,YAAW,WACTC,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,GAClEA,E,IAEPmB,GAASH,C,EAlCXc,CAAc,CAAE9B,QAAOgB,OAAMC,WAE7BN,EAAMG,OAAOd,MAAMe,MAAQ,GAC3BJ,EAAMG,OAAOE,KAAKD,MAAQ,GACzBJ,EAAMG,OAAOG,OAAOF,MAAQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const delay = parseInt(event.target.delay.value);\n  const step = parseInt(event.target.step.value);\n  const amount = parseInt(event.target.amount.value);\n\n  handlePromise({ delay, step, amount })\n  \n  event.target.delay.value = '';\n  event.target.step.value = '';\n   event.target.amount.value = '';\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promiseValue = { position, delay };\n\n  return new Promise((resolve, reject) => {\n if (shouldResolve) {\n   resolve(promiseValue);\n  } else {\n   reject(promiseValue);\n  }\n  })\n \n}\nfunction handlePromise({ delay, step, amount }) {\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        }, delay)\n      });\n    delay += step;\n  }\n}\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","promiseValue","Promise","resolve","reject","document","querySelector","addEventListener","event","preventDefault","parseInt","target","value","step","amount","param1","delay1","position1","then","param","setTimeout","$parcel$interopDefault","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$handlePromise"],"version":3,"file":"03-promises.669f044c.js.map"}